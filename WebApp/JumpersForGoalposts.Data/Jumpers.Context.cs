//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JumpersForGoalposts.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class JumpersEntities : DbContext
    {
        public JumpersEntities()
            : base("name=JumpersEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<EventGroup> EventGroups { get; set; }
        public DbSet<Event> Events { get; set; }
        public DbSet<Member> Members { get; set; }
        public DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<EventGroups_Insert_Result> EventGroups_Insert(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EventGroups_Insert_Result>("EventGroups_Insert", nameParameter);
        }
    
        public virtual int EventGroups_Update(Nullable<int> eventGroupId, string name)
        {
            var eventGroupIdParameter = eventGroupId.HasValue ?
                new ObjectParameter("eventGroupId", eventGroupId) :
                new ObjectParameter("eventGroupId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EventGroups_Update", eventGroupIdParameter, nameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Events_GetByUserId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Events_GetByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<Events_Insert_Result> Events_Insert(Nullable<System.DateTime> start, Nullable<System.DateTime> finish)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var finishParameter = finish.HasValue ?
                new ObjectParameter("finish", finish) :
                new ObjectParameter("finish", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Events_Insert_Result>("Events_Insert", startParameter, finishParameter);
        }
    
        public virtual int Events_Update(Nullable<int> eventId, Nullable<int> eventGroupId, Nullable<System.DateTime> start, Nullable<System.DateTime> finish)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            var eventGroupIdParameter = eventGroupId.HasValue ?
                new ObjectParameter("eventGroupId", eventGroupId) :
                new ObjectParameter("eventGroupId", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var finishParameter = finish.HasValue ?
                new ObjectParameter("finish", finish) :
                new ObjectParameter("finish", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Events_Update", eventIdParameter, eventGroupIdParameter, startParameter, finishParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Members_GetByEventId(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Members_GetByEventId", eventIdParameter);
        }
    
        public virtual ObjectResult<Members_Insert_Result> Members_Insert(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Members_Insert_Result>("Members_Insert", nameParameter);
        }
    
        public virtual int Members_Update(Nullable<int> memberId, string name)
        {
            var memberIdParameter = memberId.HasValue ?
                new ObjectParameter("memberId", memberId) :
                new ObjectParameter("memberId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Members_Update", memberIdParameter, nameParameter);
        }
    
        public virtual int Teams_GetByUserId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Teams_GetByUserId", userIdParameter);
        }
    
        public virtual int Users_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Users_GetById", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Users_GetByUserId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Users_GetByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<Users_Insert_Result> Users_Insert(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Users_Insert_Result>("Users_Insert", emailParameter);
        }
    
        public virtual int Users_Update(Nullable<int> userId, string email)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Users_Update", userIdParameter, emailParameter);
        }
    }
}
